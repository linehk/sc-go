version: '3.9'
services:
  redis:
    container_name: pippin_redis
    image: redis:6-alpine
    restart: unless-stopped
    networks: [ 'app-network' ]

  db:
    container_name: stablecog_go_postgres
    image: postgres:14
    user: 1000:20
    ports:
      - '53337:5432'
    restart: unless-stopped
    environment:
      - POSTGRES_DB=stablecog_go
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/dev
    volumes:
      - .data/postgres:/var/lib/postgresql/data:delegated # Delegated indicates the containers view of the volume takes priority
    networks: [ 'app-network' ]

  rabbitmq:
    container_name: stablecog_go_rabbitmq
    image: rabbitmq:3.12.6
    restart: unless-stopped
    ports:
      - '5672:5672'
    networks: [ 'app-network' ]

  qdrant:
    container_name: stablecog_go_qdrant
    image: qdrant/qdrant
    restart: unless-stopped
    ports:
      - '6333:6333'
      - '6334:6334'
    volumes:
      - .data/qdrant:/qdrant/storage:z
    networks: [ 'app-network' ]

  app:
    container_name: stablecog_go_dev
    build:
      context: .
      dockerfile: ./server/Dockerfile
    ports:
      - '13337:13337'
    restart: on-failure
    depends_on:
      - db
      - redis
      - rabbitmq
      - qdrant
    environment:
      - POSTGRES_DB=stablecog_go
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - PSTGRES_PORT=5432
      - QDRANT_URL=http://qdrant:6333
      - RUN_MIGRATIONS=true
      - REDIS_CONNECTION_STRING=redis://redis:6379
      - RABBITMQ_AMQP_URL=amqp://guest:guest@rabbitmq:5672/
    networks: [ 'app-network' ]

networks:
  app-network:
    driver: bridge
