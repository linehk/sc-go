// Code generated by ent, DO NOT EDIT.

package tiplog

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the tiplog type in the database.
	Label = "tip_log"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// FieldTippedToDiscordID holds the string denoting the tipped_to_discord_id field in the database.
	FieldTippedToDiscordID = "tipped_to_discord_id"
	// FieldTippedBy holds the string denoting the tipped_by field in the database.
	FieldTippedBy = "tipped_by"
	// FieldTippedTo holds the string denoting the tipped_to field in the database.
	FieldTippedTo = "tipped_to"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeTipsReceived holds the string denoting the tips_received edge name in mutations.
	EdgeTipsReceived = "tips_received"
	// EdgeTipsGiven holds the string denoting the tips_given edge name in mutations.
	EdgeTipsGiven = "tips_given"
	// Table holds the table name of the tiplog in the database.
	Table = "tip_log"
	// TipsReceivedTable is the table that holds the tips_received relation/edge.
	TipsReceivedTable = "tip_log"
	// TipsReceivedInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	TipsReceivedInverseTable = "users"
	// TipsReceivedColumn is the table column denoting the tips_received relation/edge.
	TipsReceivedColumn = "tipped_to"
	// TipsGivenTable is the table that holds the tips_given relation/edge.
	TipsGivenTable = "tip_log"
	// TipsGivenInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	TipsGivenInverseTable = "users"
	// TipsGivenColumn is the table column denoting the tips_given relation/edge.
	TipsGivenColumn = "tipped_by"
)

// Columns holds all SQL columns for tiplog fields.
var Columns = []string{
	FieldID,
	FieldAmount,
	FieldTippedToDiscordID,
	FieldTippedBy,
	FieldTippedTo,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
