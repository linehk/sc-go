// Code generated by ent, DO NOT EDIT.

package scheduler

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the scheduler type in the database.
	Label = "scheduler"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldNameInWorker holds the string denoting the name_in_worker field in the database.
	FieldNameInWorker = "name_in_worker"
	// FieldIsActive holds the string denoting the is_active field in the database.
	FieldIsActive = "is_active"
	// FieldIsDefault holds the string denoting the is_default field in the database.
	FieldIsDefault = "is_default"
	// FieldIsHidden holds the string denoting the is_hidden field in the database.
	FieldIsHidden = "is_hidden"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeGenerations holds the string denoting the generations edge name in mutations.
	EdgeGenerations = "generations"
	// EdgeGenerationModels holds the string denoting the generation_models edge name in mutations.
	EdgeGenerationModels = "generation_models"
	// Table holds the table name of the scheduler in the database.
	Table = "schedulers"
	// GenerationsTable is the table that holds the generations relation/edge.
	GenerationsTable = "generations"
	// GenerationsInverseTable is the table name for the Generation entity.
	// It exists in this package in order to avoid circular dependency with the "generation" package.
	GenerationsInverseTable = "generations"
	// GenerationsColumn is the table column denoting the generations relation/edge.
	GenerationsColumn = "scheduler_id"
	// GenerationModelsTable is the table that holds the generation_models relation/edge. The primary key declared below.
	GenerationModelsTable = "generation_model_compatible_schedulers"
	// GenerationModelsInverseTable is the table name for the GenerationModel entity.
	// It exists in this package in order to avoid circular dependency with the "generationmodel" package.
	GenerationModelsInverseTable = "generation_models"
)

// Columns holds all SQL columns for scheduler fields.
var Columns = []string{
	FieldID,
	FieldNameInWorker,
	FieldIsActive,
	FieldIsDefault,
	FieldIsHidden,
	FieldCreatedAt,
	FieldUpdatedAt,
}

var (
	// GenerationModelsPrimaryKey and GenerationModelsColumn2 are the table columns denoting the
	// primary key for the generation_models relation (M2M).
	GenerationModelsPrimaryKey = []string{"generation_model_id", "scheduler_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultIsActive holds the default value on creation for the "is_active" field.
	DefaultIsActive bool
	// DefaultIsDefault holds the default value on creation for the "is_default" field.
	DefaultIsDefault bool
	// DefaultIsHidden holds the default value on creation for the "is_hidden" field.
	DefaultIsHidden bool
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
