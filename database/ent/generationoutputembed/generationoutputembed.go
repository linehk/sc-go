// Code generated by ent, DO NOT EDIT.

package generationoutputembed

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the generationoutputembed type in the database.
	Label = "generation_output_embed"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPromptEmbedding holds the string denoting the prompt_embedding field in the database.
	FieldPromptEmbedding = "prompt_embedding"
	// FieldImageEmbedding holds the string denoting the image_embedding field in the database.
	FieldImageEmbedding = "image_embedding"
	// FieldOutputID holds the string denoting the output_id field in the database.
	FieldOutputID = "output_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeGenerationOutputs holds the string denoting the generation_outputs edge name in mutations.
	EdgeGenerationOutputs = "generation_outputs"
	// Table holds the table name of the generationoutputembed in the database.
	Table = "generation_output_embeds"
	// GenerationOutputsTable is the table that holds the generation_outputs relation/edge.
	GenerationOutputsTable = "generation_output_embeds"
	// GenerationOutputsInverseTable is the table name for the GenerationOutput entity.
	// It exists in this package in order to avoid circular dependency with the "generationoutput" package.
	GenerationOutputsInverseTable = "generation_outputs"
	// GenerationOutputsColumn is the table column denoting the generation_outputs relation/edge.
	GenerationOutputsColumn = "output_id"
)

// Columns holds all SQL columns for generationoutputembed fields.
var Columns = []string{
	FieldID,
	FieldPromptEmbedding,
	FieldImageEmbedding,
	FieldOutputID,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
