name: 🥂 Release PROD

on:
  push:
    branches: [production]

concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup_env:
    name: ⚙️ Setup environment
    runs-on: self-hosted
    steps:
      - name: Add SHORT_SHA env property
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA::7}`" >> $GITHUB_ENV

      - name: Escape commit message
        run: |
          import json
          import os
          import shlex
          with open('${{ github.event_path }}') as fh:
              event = json.load(fh)
          escaped = shlex.quote(event['head_commit']['message']).replace("'", "")
          with open(os.environ['GITHUB_ENV'], 'a') as fh:
              print(f'COMMIT_MSG={escaped}', file=fh)
        shell: python3 {0}

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

    outputs:
      short_sha: ${{ env.SHORT_SHA }}
      commit_msg: ${{ env.COMMIT_MSG }}
      branch_name: ${{ env.BRANCH_NAME }}

  deploy_server_prod:
    name: 🚀 Deploy Server (PROD)
    runs-on: self-hosted
    needs:
      - setup_env
    env:
      GITHUB_RUN_ID: ${{ github.run_id }}
    steps:
      - uses: actions/checkout@v3

      - name: Deploy
        uses: ./.github/actions/aws-deploy
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          service: prod-sc-server-Service-uDZHByAncsMB
          task-definition: ./aws/prod/sc-server.json
          image: stablecog/sc-server:${{ needs.setup_env.outputs.branch_name}}-${{ env.GITHUB_RUN_ID }}
          embed-title: "${{ needs.setup_env.outputs.commit_msg }}  •  ${{ needs.setup_env.outputs.short_sha }}"
          prod-webhook-url: ${{ secrets.DISCORD_WEBHOOK_PROD }}
          qa-webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          env: prod

  deploy_cron_prod:
    name: 🚀 Deploy Cron (PROD)
    runs-on: self-hosted
    needs:
      - setup_env
    env:
      GITHUB_RUN_ID: ${{ github.run_id }}
    steps:
      - uses: actions/checkout@v3

      - name: Deploy
        uses: ./.github/actions/aws-deploy
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          service: prod-sc-cron
          task-definition: ./aws/prod/sc-cron.json
          image: stablecog/sc-server:${{ needs.setup_env.outputs.branch_name}}-${{ env.GITHUB_RUN_ID }}
          env: prod
